 Given the FST
 fst = (pn.a("a") | pn.a("e")) + pn.t("a", pn.a("0").closure(0,5)) | pn.t(pn.a("a").star, "0") + pn.a("xxx")
 
 Regular expression (same as fst input language)
 "(^(aa|ea)$)|(a*xxx)"
   
 
 0 outputs
 any invalid input
 "z" => []
 "a" => []
 
 1 output
 "xxx" => ['0xxx']
 "axxx" => ['0xxx'] (any number of "a"-s on front)
 
 
 2 outputs
 not achievable
 
 3 or more outputs
 "aa" => ['a', 'a000', 'a0000', 'a0', 'a00', 'a00000']
 "ea" => ['e', 'e000', 'e0000', 'e0', 'e00', 'e00000']
 